name: CI Build for macOS (x86_64 and arm64)

on:
  push:  # Automatically triggered for pushes
  pull_request:  # Automatically triggered for pull requests
  workflow_dispatch:  # Manually triggered via the GitHub Actions UI

jobs:
  build:
    name: Build on macOS ${{ matrix.arch }}

    strategy:
      fail-fast: false
      matrix:
        os: [macOS-latest]
        arch: [arm64, x86_64]  # Support both architectures (Apple Silicon + Rosetta for x86_64)

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Install Rosetta 2 if running on Apple Silicon and building for x86_64
      - name: Install Rosetta 2 (if needed for x86_64)
        if: runner.os == 'macOS' && matrix.arch == 'x86_64'
        run: |
          softwareupdate --install-rosetta --agree-to-license || echo "Rosetta 2 already installed"

      - name: Set architecture for build
        run: |
          if [[ "${{ matrix.arch }}" == "x86_64" ]]; then
            export ARCH_CMD="arch -x86_64"
          else
            export ARCH_CMD=""
          fi
          echo "ARCH_CMD=$ARCH_CMD" >> $GITHUB_ENV

      - name: Install Homebrew
        run: |
          NONINTERACTIVE=1 /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          if [[ "${{ matrix.arch }}" == "arm64" ]]; then
            eval "$(/opt/homebrew/bin/brew shellenv)"  # Apple Silicon Homebrew path
          else
            eval "$(/usr/local/bin/brew shellenv)"    # x86_64 Homebrew path (via Rosetta)
          fi

      # Install SDL2 and other dependencies via Homebrew
      - name: Install dependencies with Homebrew
        run: |
          brew install cmake pkg-config sdl12-compat sdl_gfx yaml-cpp ccache sdl2 sdl_image sdl_mixer

      - name: Generate project files with CMake
        run: |
          mkdir -p build
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release

      - name: Link HomeBrew libs in OpenXcom/cmake/modules/PostprocessBundle.cmake
        run: |
          FIND='fixup_bundle("${BUNDLE_PATH}" "${BUNDLE_LIBS}" "")'
          REPLACE='fixup_bundle("${BUNDLE_PATH}" "${BUNDLE_LIBS}" "'$(brew --prefix)'/lib")'
          sed -i '' "s,$FIND,$REPLACE," ../cmake/modules/PostprocessBundle.cmake

      - name: Copy SDL2 to bundle
        run: |
          mkdir -p openxcom.app/Contents/Frameworks/
          libSDL2=$(brew --prefix sdl2)/lib/libSDL2-2.0.0.dylib
          cp $libSDL2 openxcom.app/Contents/Frameworks

      - name: Build the project
        run: |
          cd build
          make -j$(( $(sysctl -n hw.ncpu) - 1 ))

      - name: Fix SDL distribute
        run: |
          sudo xattr -cr build/openxcom.app
          codesign --force --deep --sign - build/openxcom.app

      - name: Archive built artifacts
        uses: actions/upload-artifact@v3
        with:
          name: openxcom_${{ matrix.arch }}
          path: build/openxcom.app

      - name: ccache stats
        run: ccache -s --max-size=390MB

name: CI Build for macOS (x86_64 and arm64)

on: [push, pull_request]

jobs:
  build:
    name: Build on macOS ${{ matrix.arch }}

    strategy:
      fail-fast: false
      matrix:
        os: [macOS-latest]
        arch: [arm64, x86_64]  # Support both architectures (Apple Silicon + Rosetta for x86_64)

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Install Rosetta 2 if running on Apple Silicon and building for x86_64
      - name: Install Rosetta 2 (if needed for x86_64)
        if: runner.os == 'macOS' && matrix.arch == 'x86_64'
        run: |
          softwareupdate --install-rosetta --agree-to-license || echo "Rosetta 2 already installed"

      - name: Set architecture for build
        run: |
          if [[ "${{ matrix.arch }}" == "x86_64" ]]; then
            export ARCH_CMD="arch -x86_64"
          else
            export ARCH_CMD=""
          fi
          echo "ARCH_CMD=$ARCH_CMD" >> $GITHUB_ENV

      - name: Install Homebrew
        run: |
          NONINTERACTIVE=1 /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          if [[ "${{ matrix.arch }}" == "arm64" ]]; then
            eval "$(/opt/homebrew/bin/brew shellenv)"  # Apple Silicon Homebrew path
          else
            eval "$(/usr/local/bin/brew shellenv)"    # x86_64 Homebrew path (via Rosetta)
          fi

      - name: Install dependencies with Homebrew
        run: |
          brew install cmake pkg-config sdl12-compat sdl_gfx sdl_image sdl_mixer yaml-cpp ccache

      - name: Generate project files with CMake
        run: |
          cmake -B build -DCMAKE_BUILD_TYPE=Release

      - name: Build the project
        run: |
          cmake --build build --parallel $(( $(sysctl -n hw.ncpu) - 1 ))

      - name: Make install
        run: |
          cmake --install build

      - name: Archive built artifacts
        uses: actions/upload-artifact@v3
        with:
          name: openxcom_${{ matrix.arch }}
          path: build/openxcom.app

      - name: ccache stats
        run: ccache -s --max-size=390MB
